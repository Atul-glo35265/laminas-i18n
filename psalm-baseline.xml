<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.21.0@d8bec4c7aaee111a532daec32fb09de5687053d1">
  <file src="src/Filter/Alnum.php">
    <DocblockTypeContradiction occurrences="1">
      <code>! is_scalar($value) &amp;&amp; ! is_array($value)</code>
    </DocblockTypeContradiction>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument occurrences="2">
      <code>$allowWhiteSpaceOrOptions</code>
      <code>$allowWhiteSpaceOrOptions</code>
    </PossiblyInvalidArgument>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(bool) $flag</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Filter/Alpha.php">
    <DocblockTypeContradiction occurrences="1">
      <code>! is_scalar($value) &amp;&amp; ! is_array($value)</code>
    </DocblockTypeContradiction>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/Filter/NumberFormat.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>NumberFormat</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Filter/NumberParse.php">
    <DocblockTypeContradiction occurrences="1">
      <code>$this-&gt;formatter === null</code>
    </DocblockTypeContradiction>
    <PossiblyNullPropertyAssignmentValue occurrences="2">
      <code>null</code>
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$formatter</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="2">
      <code>(int) $style</code>
      <code>(int) $type</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Module.php">
    <UndefinedDocblockClass occurrences="1">
      <code>\Laminas\ModuleManager\ModuleManager</code>
    </UndefinedDocblockClass>
  </file>
  <file src="src/Translator/Loader/AbstractFileLoader.php">
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(bool) $flag</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Translator/Loader/Gettext.php">
    <InvalidArrayAccess occurrences="4">
      <code>$originalStringTable[$offsetKey]</code>
      <code>$originalStringTable[$sizeKey]</code>
      <code>$translationStringTable[$offsetKey]</code>
      <code>$translationStringTable[$sizeKey]</code>
    </InvalidArrayAccess>
    <InvalidPropertyAssignmentValue occurrences="3">
      <code>$this-&gt;file</code>
      <code>$this-&gt;file</code>
      <code>$this-&gt;file</code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement occurrences="2">
      <code>unpack('N' . $num, fread($this-&gt;file, 4 * $num))</code>
      <code>unpack('V' . $num, fread($this-&gt;file, 4 * $num))</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>int</code>
    </InvalidReturnType>
    <MissingConstructor occurrences="2">
      <code>$file</code>
      <code>$littleEndian</code>
    </MissingConstructor>
  </file>
  <file src="src/Translator/Loader/Ini.php">
    <TypeDoesNotContainType occurrences="1">
      <code>is_array($messages)</code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/Translator/Loader/PhpArray.php">
    <UnresolvableInclude occurrences="1">
      <code>include $fromIncludePath</code>
    </UnresolvableInclude>
  </file>
  <file src="src/Translator/Loader/PhpMemoryArray.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_array($this-&gt;messages)</code>
    </DocblockTypeContradiction>
    <MissingParamType occurrences="1">
      <code>$messages</code>
    </MissingParamType>
  </file>
  <file src="src/Translator/LoaderPluginManager.php">
    <MissingReturnType occurrences="1">
      <code>validatePlugin</code>
    </MissingReturnType>
    <ParamNameMismatch occurrences="1">
      <code>$plugin</code>
    </ParamNameMismatch>
  </file>
  <file src="src/Translator/LoaderPluginManagerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>LoaderPluginManagerFactory</code>
    </DeprecatedInterface>
    <MissingPropertyType occurrences="1">
      <code>$creationOptions</code>
    </MissingPropertyType>
    <ParamNameMismatch occurrences="1">
      <code>$container</code>
    </ParamNameMismatch>
  </file>
  <file src="src/Translator/Plural/Parser.php">
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyUndefinedVariable occurrences="1">
      <code>$id</code>
    </PossiblyUndefinedVariable>
    <PropertyNotSetInConstructor occurrences="3">
      <code>$currentPos</code>
      <code>$currentToken</code>
      <code>$string</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Translator/Plural/Rule.php">
    <DocblockTypeContradiction occurrences="1">
      <code>static::$parser === null</code>
    </DocblockTypeContradiction>
    <InvalidReturnStatement occurrences="1"/>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(int) $number</code>
    </RedundantCastGivenDocblockType>
    <UnsafeInstantiation occurrences="1">
      <code>new static($numPlurals, $ast)</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Translator/Plural/Symbol.php">
    <DocblockTypeContradiction occurrences="2">
      <code>$this-&gt;leftDenotationGetter === null</code>
      <code>$this-&gt;nullDenotationGetter === null</code>
    </DocblockTypeContradiction>
    <PropertyNotSetInConstructor occurrences="5">
      <code>$first</code>
      <code>$leftDenotationGetter</code>
      <code>$nullDenotationGetter</code>
      <code>$second</code>
      <code>$third</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Translator/TextDomain.php">
    <DocblockTypeContradiction occurrences="2">
      <code>$this-&gt;pluralRule === null</code>
      <code>static::$defaultPluralRule === null</code>
    </DocblockTypeContradiction>
    <MissingConstructor occurrences="1">
      <code>$pluralRule</code>
    </MissingConstructor>
    <PossiblyNullArgument occurrences="1">
      <code>$textDomain-&gt;getPluralRule()</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="2">
      <code>getNumPlurals</code>
      <code>getNumPlurals</code>
    </PossiblyNullReference>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$this-&gt;pluralRule !== null</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Translator/Translator.php">
    <DocblockTypeContradiction occurrences="3">
      <code>$message === null</code>
      <code>$message === null</code>
      <code>is_array($options)</code>
    </DocblockTypeContradiction>
    <FalseOperand occurrences="1">
      <code>$messagesLoaded</code>
    </FalseOperand>
    <InvalidOperand occurrences="2">
      <code>$this-&gt;loadMessagesFromFiles($textDomain, $locale)</code>
      <code>$this-&gt;loadMessagesFromPatterns($textDomain, $locale)</code>
    </InvalidOperand>
    <MissingClosureParamType occurrences="2">
      <code>$r</code>
      <code>$r</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="2">
      <code>static function ($r) {</code>
      <code>static function ($r) {</code>
    </MissingClosureReturnType>
    <MissingConstructor occurrences="2">
      <code>$events</code>
      <code>$pluginManager</code>
    </MissingConstructor>
    <PossiblyNullReference occurrences="1">
      <code>evaluate</code>
    </PossiblyNullReference>
    <PossiblyUndefinedVariable occurrences="1">
      <code>$cacheId</code>
    </PossiblyUndefinedVariable>
    <RedundantCondition occurrences="2">
      <code>$translation[$index] !== null</code>
      <code>isset($translation[$index]) &amp;&amp; $translation[$index] !== '' &amp;&amp; $translation[$index] !== null</code>
    </RedundantCondition>
    <UnsafeInstantiation occurrences="1">
      <code>new static()</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Translator/TranslatorServiceFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>TranslatorServiceFactory</code>
    </DeprecatedInterface>
  </file>
  <file src="src/Validator/Alnum.php">
    <DocblockTypeContradiction occurrences="2">
      <code>! is_string($value) &amp;&amp; ! is_int($value) &amp;&amp; ! is_float($value)</code>
      <code>null === static::$filter</code>
    </DocblockTypeContradiction>
    <InvalidScalarArgument occurrences="1">
      <code>$value</code>
    </InvalidScalarArgument>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <RedundantCastGivenDocblockType occurrences="2">
      <code>(bool) $allowWhiteSpace</code>
      <code>(bool) $allowWhiteSpace</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Validator/Alpha.php">
    <DocblockTypeContradiction occurrences="2">
      <code>is_string($value)</code>
      <code>null === static::$filter</code>
    </DocblockTypeContradiction>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$filter</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="src/Validator/DateTime.php">
    <DocblockTypeContradiction occurrences="2">
      <code>$this-&gt;formatter === null</code>
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="1">
      <code>$this-&gt;formatter-&gt;getTimezone()</code>
    </InvalidArgument>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyNullArgument occurrences="1">
      <code>$this-&gt;pattern</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$formatter</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType occurrences="6">
      <code>$this-&gt;formatter</code>
      <code>$this-&gt;formatter</code>
      <code>$this-&gt;formatter</code>
      <code>$this-&gt;formatter</code>
      <code>$this-&gt;formatter</code>
      <code>$this-&gt;formatter</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Validator/IsFloat.php">
    <DocblockTypeContradiction occurrences="2">
      <code>! is_scalar($value)</code>
      <code>is_bool($value)</code>
    </DocblockTypeContradiction>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyFalseArgument occurrences="1">
      <code>$lastStringGroup</code>
    </PossiblyFalseArgument>
  </file>
  <file src="src/Validator/IsInt.php">
    <DocblockTypeContradiction occurrences="2">
      <code>! is_string($value) &amp;&amp; ! is_int($value) &amp;&amp; ! is_float($value)</code>
      <code>is_bool($strict)</code>
    </DocblockTypeContradiction>
    <InvalidArrayOffset occurrences="1"/>
    <InvalidScalarArgument occurrences="2">
      <code>$value</code>
      <code>$value</code>
    </InvalidScalarArgument>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyNullArgument occurrences="1">
      <code>$locale</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Validator/PhoneNumber.php">
    <InvalidArgument occurrences="1">
      <code>$countryPattern['code']</code>
    </InvalidArgument>
    <InvalidOperand occurrences="2">
      <code>$countryPattern['code']</code>
      <code>$countryPattern['code']</code>
    </InvalidOperand>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(bool) $possible</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Validator/PostCode.php">
    <DeprecatedMethod occurrences="2">
      <code>getService</code>
      <code>setService</code>
    </DeprecatedMethod>
    <DocblockTypeContradiction occurrences="1">
      <code>! is_string($value) &amp;&amp; ! is_int($value)</code>
    </DocblockTypeContradiction>
    <InvalidScalarArgument occurrences="3">
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </InvalidScalarArgument>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/View/Helper/AbstractTranslatorHelper.php">
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(bool) $enabled</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/View/Helper/CurrencyFormat.php">
    <DocblockTypeContradiction occurrences="1">
      <code>$this-&gt;locale === null</code>
    </DocblockTypeContradiction>
    <PropertyNotSetInConstructor occurrences="3">
      <code>$currencyCode</code>
      <code>$currencyPattern</code>
      <code>$locale</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="2">
      <code>(bool) $showDecimals</code>
      <code>(string) $locale</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$pattern !== null</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/View/Helper/DateFormat.php">
    <DocblockTypeContradiction occurrences="1">
      <code>$this-&gt;locale === null</code>
    </DocblockTypeContradiction>
    <PossiblyNullArgument occurrences="1">
      <code>$pattern</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$locale</code>
      <code>$timezone</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="2">
      <code>(string) $locale</code>
      <code>(string) $timezone</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/View/Helper/NumberFormat.php">
    <DocblockTypeContradiction occurrences="3">
      <code>$this-&gt;locale === null</code>
      <code>null === $this-&gt;formatStyle</code>
      <code>null === $this-&gt;formatType</code>
    </DocblockTypeContradiction>
    <PropertyNotSetInConstructor occurrences="4">
      <code>$decimals</code>
      <code>$formatStyle</code>
      <code>$formatType</code>
      <code>$locale</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="3">
      <code>(int) $formatStyle</code>
      <code>(int) $formatType</code>
      <code>(string) $locale</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$decimals !== null</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/View/Helper/Plural.php">
    <DocblockTypeContradiction occurrences="1">
      <code>null === $this-&gt;getPluralRule()</code>
    </DocblockTypeContradiction>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$rule</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/View/HelperConfig.php">
    <RedundantCondition occurrences="1">
      <code>method_exists($serviceManager, 'configure')</code>
    </RedundantCondition>
  </file>
  <file src="test/Filter/AlnumTest.php">
    <MissingParamType occurrences="1">
      <code>$input</code>
    </MissingParamType>
    <MissingReturnType occurrences="2">
      <code>returnUnfilteredDataProvider</code>
      <code>testFilterSupportArray</code>
    </MissingReturnType>
  </file>
  <file src="test/Filter/AlphaTest.php">
    <MissingParamType occurrences="1">
      <code>$input</code>
    </MissingParamType>
    <MissingReturnType occurrences="2">
      <code>returnUnfilteredDataProvider</code>
      <code>testFilterSupportArray</code>
    </MissingReturnType>
  </file>
  <file src="test/Filter/NumberFormatTest.php">
    <MissingParamType occurrences="11">
      <code>$expected</code>
      <code>$expected</code>
      <code>$input</code>
      <code>$locale</code>
      <code>$locale</code>
      <code>$style</code>
      <code>$style</code>
      <code>$type</code>
      <code>$type</code>
      <code>$value</code>
      <code>$value</code>
    </MissingParamType>
    <MissingReturnType occurrences="7">
      <code>formattedToNumberProvider</code>
      <code>numberToFormattedProvider</code>
      <code>returnUnfilteredDataProvider</code>
      <code>testConstructWithOptions</code>
      <code>testConstructWithParameters</code>
      <code>testFormattedToNumber</code>
      <code>testNumberToFormatted</code>
    </MissingReturnType>
  </file>
  <file src="test/Filter/NumberParseTest.php">
    <MissingParamType occurrences="5">
      <code>$expected</code>
      <code>$locale</code>
      <code>$style</code>
      <code>$type</code>
      <code>$value</code>
    </MissingParamType>
    <MissingReturnType occurrences="4">
      <code>formattedToNumberProvider</code>
      <code>testConstructWithOptions</code>
      <code>testConstructWithParameters</code>
      <code>testFormattedToNumber</code>
    </MissingReturnType>
  </file>
  <file src="test/ModuleTest.php">
    <MissingReturnType occurrences="2">
      <code>testConfigReturnsExpectedKeys</code>
      <code>testInitRegistersPluginManagerSpecificationWithServiceListener</code>
    </MissingReturnType>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;module</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="2">
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/TestAsset/ModuleEventInterface.php">
    <MissingParamType occurrences="2">
      <code>$default</code>
      <code>$name</code>
    </MissingParamType>
    <MissingReturnType occurrences="1">
      <code>getParam</code>
    </MissingReturnType>
  </file>
  <file src="test/TestAsset/ModuleManagerInterface.php">
    <MissingReturnType occurrences="1">
      <code>getEvent</code>
    </MissingReturnType>
  </file>
  <file src="test/TestAsset/ServiceListenerInterface.php">
    <MissingReturnType occurrences="1">
      <code>addServiceManager</code>
    </MissingReturnType>
  </file>
  <file src="test/Translator/Loader/GettextTest.php">
    <ArgumentTypeCoercion occurrences="4">
      <code>'Laminas\I18n\Exception\InvalidArgumentException'</code>
      <code>'Laminas\I18n\Exception\InvalidArgumentException'</code>
      <code>'Laminas\I18n\Translator\TextDomain'</code>
      <code>'Laminas\I18n\Translator\TextDomain'</code>
    </ArgumentTypeCoercion>
    <MissingPropertyType occurrences="3">
      <code>$originalIncludePath</code>
      <code>$originalLocale</code>
      <code>$testFilesDir</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="9">
      <code>testLoaderFailsToLoadBadFile</code>
      <code>testLoaderFailsToLoadMissingFile</code>
      <code>testLoaderLoadsBigEndianFile</code>
      <code>testLoaderLoadsEmptyFile</code>
      <code>testLoaderLoadsFromIncludePath</code>
      <code>testLoaderLoadsFromPhar</code>
      <code>testLoaderLoadsPlural</code>
      <code>testLoaderLoadsPluralRules</code>
      <code>testLoaderReturnsValidTextDomain</code>
    </MissingReturnType>
    <PossiblyNullReference occurrences="4">
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
    </PossiblyNullReference>
  </file>
  <file src="test/Translator/Loader/IniTest.php">
    <ArgumentTypeCoercion occurrences="4">
      <code>'Laminas\I18n\Exception\InvalidArgumentException'</code>
      <code>'Laminas\I18n\Exception\InvalidArgumentException'</code>
      <code>'Laminas\I18n\Exception\InvalidArgumentException'</code>
      <code>'Laminas\I18n\Translator\TextDomain'</code>
    </ArgumentTypeCoercion>
    <MissingPropertyType occurrences="3">
      <code>$originalIncludePath</code>
      <code>$originalLocale</code>
      <code>$testFilesDir</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="10">
      <code>testLoaderFailsToLoadBadSyntax</code>
      <code>testLoaderFailsToLoadMissingFile</code>
      <code>testLoaderFailsToLoadNonArray</code>
      <code>testLoaderLoadsEmptyFile</code>
      <code>testLoaderLoadsFromIncludePath</code>
      <code>testLoaderLoadsFromPhar</code>
      <code>testLoaderLoadsPluralRules</code>
      <code>testLoaderReturnsValidTextDomain</code>
      <code>testLoaderReturnsValidTextDomainWithFileWithoutPlural</code>
      <code>testLoaderReturnsValidTextDomainWithSimpleSyntax</code>
    </MissingReturnType>
    <PossiblyNullReference occurrences="4">
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
    </PossiblyNullReference>
  </file>
  <file src="test/Translator/Loader/PhpArrayTest.php">
    <ArgumentTypeCoercion occurrences="3">
      <code>'Laminas\I18n\Exception\InvalidArgumentException'</code>
      <code>'Laminas\I18n\Exception\InvalidArgumentException'</code>
      <code>'Laminas\I18n\Translator\TextDomain'</code>
    </ArgumentTypeCoercion>
    <MissingPropertyType occurrences="3">
      <code>$originalIncludePath</code>
      <code>$originalLocale</code>
      <code>$testFilesDir</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="7">
      <code>testLoaderFailsToLoadMissingFile</code>
      <code>testLoaderFailsToLoadNonArray</code>
      <code>testLoaderLoadsEmptyArray</code>
      <code>testLoaderLoadsFromIncludePath</code>
      <code>testLoaderLoadsFromPhar</code>
      <code>testLoaderLoadsPluralRules</code>
      <code>testLoaderReturnsValidTextDomain</code>
    </MissingReturnType>
    <PossiblyNullReference occurrences="4">
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
    </PossiblyNullReference>
  </file>
  <file src="test/Translator/Loader/PhpMemoryArrayTest.php">
    <ArgumentTypeCoercion occurrences="4">
      <code>'Laminas\I18n\Exception\InvalidArgumentException'</code>
      <code>'Laminas\I18n\Exception\InvalidArgumentException'</code>
      <code>'Laminas\I18n\Exception\InvalidArgumentException'</code>
      <code>'Laminas\I18n\Translator\TextDomain'</code>
    </ArgumentTypeCoercion>
    <MissingPropertyType occurrences="3">
      <code>$originalIncludePath</code>
      <code>$originalLocale</code>
      <code>$testFilesDir</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="6">
      <code>testLoaderFailsToLoadMissingTextDomain</code>
      <code>testLoaderFailsToLoadNonArray</code>
      <code>testLoaderFailsToLoadNonArrayLocale</code>
      <code>testLoaderLoadsEmptyArray</code>
      <code>testLoaderLoadsPluralRules</code>
      <code>testLoaderReturnsValidTextDomain</code>
    </MissingReturnType>
    <PossiblyNullReference occurrences="4">
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
    </PossiblyNullReference>
    <UnresolvableInclude occurrences="3">
      <code>include $this-&gt;testFilesDir . '/translation_empty.php'</code>
      <code>include $this-&gt;testFilesDir . '/translation_en.php'</code>
      <code>include $this-&gt;testFilesDir . '/translation_en.php'</code>
    </UnresolvableInclude>
  </file>
  <file src="test/Translator/LoaderPluginManagerCompatibilityTest.php">
    <MissingReturnType occurrences="1">
      <code>testInstanceOfMatches</code>
    </MissingReturnType>
  </file>
  <file src="test/Translator/LoaderPluginManagerFactoryTest.php">
    <MissingClosureParamType occurrences="2">
      <code>$container</code>
      <code>$container</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="2">
      <code>static function ($container) use ($translator) {</code>
      <code>static function ($container) use ($translator) {</code>
    </MissingClosureReturnType>
    <MissingParamType occurrences="2">
      <code>$loader</code>
      <code>$loader</code>
    </MissingParamType>
    <MissingReturnType occurrences="9">
      <code>provideLoader</code>
      <code>testConfiguresTranslatorServicesWhenFound</code>
      <code>testCreateServiceCanConfigurePluginManagerViaOptions</code>
      <code>testCreateServiceReturnsUnconfiguredPluginManagerWhenNoOptionsPresent</code>
      <code>testDoesNotConfigureTranslatorServicesWhenConfigServiceDoesNotContainTranslatorsConfig</code>
      <code>testDoesNotConfigureTranslatorServicesWhenConfigServiceNotPresent</code>
      <code>testDoesNotConfigureTranslatorServicesWhenServiceListenerPresent</code>
      <code>testFactoryCanConfigurePluginManagerViaOptions</code>
      <code>testFactoryReturnsUnconfiguredPluginManagerWhenNoOptionsPresent</code>
    </MissingReturnType>
  </file>
  <file src="test/Translator/Plural/RuleTest.php">
    <MissingParamType occurrences="4">
      <code>$expectedValue</code>
      <code>$expectedValues</code>
      <code>$rule</code>
      <code>$rule</code>
    </MissingParamType>
    <MissingReturnType occurrences="5">
      <code>completeRuleProvider</code>
      <code>parseRuleProvider</code>
      <code>testCompleteRules</code>
      <code>testGetNumPlurals</code>
      <code>testParseRules</code>
    </MissingReturnType>
  </file>
  <file src="test/Translator/TestAsset/Loader.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>TextDomain|null</code>
    </ImplementedReturnTypeMismatch>
    <MissingPropertyType occurrences="1">
      <code>$textDomain</code>
    </MissingPropertyType>
    <ParamNameMismatch occurrences="2">
      <code>$filename</code>
      <code>$locale</code>
    </ParamNameMismatch>
    <UndefinedDocblockClass occurrences="1">
      <code>TextDomain|null</code>
    </UndefinedDocblockClass>
  </file>
  <file src="test/Translator/TextDomainTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>'Laminas\I18n\Exception\RuntimeException'</code>
    </ArgumentTypeCoercion>
    <MissingReturnType occurrences="9">
      <code>testArrayAccess</code>
      <code>testInstantiation</code>
      <code>testMerging</code>
      <code>testMergingIncompatibleTextDomains</code>
      <code>testMergingTextDomainWithPluralRuleIntoTextDomainWithoutPluralRule</code>
      <code>testMergingTextDomainWithoutPluralRuleIntoTextDomainWithPluralRule</code>
      <code>testMergingTextDomainsWithPluralRules</code>
      <code>testPluralRuleDefault</code>
      <code>testPluralRuleSetter</code>
    </MissingReturnType>
    <PossiblyNullReference occurrences="7">
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>evaluate</code>
      <code>getNumPlurals</code>
      <code>getNumPlurals</code>
      <code>getNumPlurals</code>
    </PossiblyNullReference>
  </file>
  <file src="test/Translator/TranslatorAwareTraitTest.php">
    <InvalidScalarArgument occurrences="8">
      <code>'\Laminas\I18n\Translator\TranslatorAwareTrait'</code>
      <code>'\Laminas\I18n\Translator\TranslatorAwareTrait'</code>
      <code>'\Laminas\I18n\Translator\TranslatorAwareTrait'</code>
      <code>'\Laminas\I18n\Translator\TranslatorAwareTrait'</code>
      <code>'\Laminas\I18n\Translator\TranslatorAwareTrait'</code>
      <code>'\Laminas\I18n\Translator\TranslatorAwareTrait'</code>
      <code>'\Laminas\I18n\Translator\TranslatorAwareTrait'</code>
      <code>'\Laminas\I18n\Translator\TranslatorAwareTrait'</code>
    </InvalidScalarArgument>
    <MissingReturnType occurrences="8">
      <code>testGetTranslator</code>
      <code>testGetTranslatorTextDomain</code>
      <code>testHasTranslator</code>
      <code>testIsTranslatorEnabled</code>
      <code>testSetTranslator</code>
      <code>testSetTranslatorAndTextDomain</code>
      <code>testSetTranslatorEnabled</code>
      <code>testSetTranslatorTextDomain</code>
    </MissingReturnType>
  </file>
  <file src="test/Translator/TranslatorServiceFactoryTest.php">
    <MissingReturnType occurrences="2">
      <code>testCreateServiceWithNoTranslatorKeyDefined</code>
      <code>testCreateServiceWithNoTranslatorPluginManagerDefined</code>
    </MissingReturnType>
  </file>
  <file src="test/Translator/TranslatorTest.php">
    <ArgumentTypeCoercion occurrences="7">
      <code>'Laminas\Cache\Storage\StorageInterface'</code>
      <code>'Laminas\EventManager\Event'</code>
      <code>'Laminas\EventManager\Event'</code>
      <code>'Laminas\I18n\Translator\TextDomain'</code>
      <code>'Laminas\I18n\Translator\Translator'</code>
      <code>'Laminas\I18n\Translator\Translator'</code>
      <code>'Laminas\I18n\Translator\Translator'</code>
    </ArgumentTypeCoercion>
    <MissingReturnType occurrences="27">
      <code>testClearCacheReturnsFalseIfNoCacheIsPresent</code>
      <code>testDefaultLocale</code>
      <code>testEnableDisableEventManger</code>
      <code>testEnableEventMangerViaFactory</code>
      <code>testFactoryCreatesTranslator</code>
      <code>testFactoryCreatesTranslatorWithCache</code>
      <code>testForcedLocale</code>
      <code>testGetAllMessagesLoadedInTranslator</code>
      <code>testGetAllMessagesReturnsNullWhenGivenLocaleNotExist</code>
      <code>testGetAllMessagesReturnsNullWhenGivenTextDomainIsNotFound</code>
      <code>testListenerOnMissingTranslationEventCanReturnString</code>
      <code>testListenerOnNoMessagesLoadedEventCanReturnTextDomainObject</code>
      <code>testMissingTranslationEvent</code>
      <code>testNoMessagesLoadedEvent</code>
      <code>testNullMessageArgumentShouldReturnAnEmptyString</code>
      <code>testTranslate</code>
      <code>testTranslateNoPlurals</code>
      <code>testTranslateNonExistantLocale</code>
      <code>testTranslateNonExistantTranslation</code>
      <code>testTranslatePlurals</code>
      <code>testTranslatePluralsNonExistantLocale</code>
      <code>testTranslatePluralsNonExistantTranslation</code>
      <code>testTranslationFromDifferentSourceTypes</code>
      <code>testTranslationFromSeveralTranslationFiles</code>
      <code>testTranslationsAreClearedFromCache</code>
      <code>testTranslationsAreStoredInCache</code>
      <code>testTranslationsLoadedFromCache</code>
    </MissingReturnType>
    <NullArgument occurrences="4">
      <code>null</code>
      <code>null</code>
      <code>null</code>
      <code>null</code>
    </NullArgument>
    <RedundantCondition occurrences="2">
      <code>assertNull</code>
      <code>assertNull</code>
    </RedundantCondition>
  </file>
  <file src="test/Validator/AlnumTest.php">
    <InvalidArgument occurrences="1">
      <code>[1 =&gt; 1]</code>
    </InvalidArgument>
    <MissingReturnType occurrences="3">
      <code>testEqualsMessageTemplates</code>
      <code>testIntegerValidation</code>
      <code>testNonStringValidation</code>
    </MissingReturnType>
  </file>
  <file src="test/Validator/AlphaTest.php">
    <InvalidArgument occurrences="1">
      <code>[1 =&gt; 1]</code>
    </InvalidArgument>
    <MissingReturnType occurrences="2">
      <code>testEqualsMessageTemplates</code>
      <code>testNonStringValidation</code>
    </MissingReturnType>
  </file>
  <file src="test/Validator/DateTimeTest.php">
    <InvalidArgument occurrences="2">
      <code>$this-&gt;locale</code>
      <code>$this-&gt;timezone</code>
    </InvalidArgument>
    <InvalidPropertyAssignmentValue occurrences="2">
      <code>Locale::getDefault()</code>
      <code>date_default_timezone_get()</code>
    </InvalidPropertyAssignmentValue>
    <MissingReturnType occurrences="9">
      <code>basicProvider</code>
      <code>testApplicationOptionLocale</code>
      <code>testApplicationOptionTimezone</code>
      <code>testBasic</code>
      <code>testMultipleIsValidCalls</code>
      <code>testOptionLocale</code>
      <code>testOptionPattern</code>
      <code>testOptionPatternOmitted</code>
      <code>testOptionTimezone</code>
    </MissingReturnType>
    <PossiblyNullArgument occurrences="4">
      <code>$this-&gt;validator-&gt;getDateType()</code>
      <code>$this-&gt;validator-&gt;getLocale()</code>
      <code>$this-&gt;validator-&gt;getPattern()</code>
      <code>$this-&gt;validator-&gt;getTimeType()</code>
    </PossiblyNullArgument>
    <UndefinedMethod occurrences="1">
      <code>testBasic</code>
    </UndefinedMethod>
  </file>
  <file src="test/Validator/IsFloatTest.php">
    <InvalidArgument occurrences="1">
      <code>[1 =&gt; 1]</code>
    </InvalidArgument>
    <MissingParamType occurrences="1">
      <code>$type</code>
    </MissingParamType>
    <MissingReturnType occurrences="8">
      <code>floatAndIntegerProvider</code>
      <code>lookAlikeProvider</code>
      <code>testEqualsMessageTemplates</code>
      <code>testNonStringValidation</code>
      <code>testNotFloat</code>
      <code>testSettingLocales</code>
      <code>testUsingApplicationLocale</code>
      <code>validationFailureProvider</code>
    </MissingReturnType>
  </file>
  <file src="test/Validator/IsIntTest.php">
    <InvalidMethodCall occurrences="17">
      <code>getLocale</code>
      <code>getMessageTemplates</code>
      <code>getMessages</code>
      <code>getOption</code>
      <code>getStrict</code>
      <code>getStrict</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>setLocale</code>
      <code>setLocale</code>
      <code>setLocale</code>
      <code>setStrict</code>
      <code>setStrict</code>
      <code>setStrict</code>
    </InvalidMethodCall>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>new IsIntValidator()</code>
    </InvalidPropertyAssignmentValue>
    <MissingParamType occurrences="2">
      <code>$expected</code>
      <code>$intVal</code>
    </MissingParamType>
    <MissingReturnType occurrences="8">
      <code>intDataProvider</code>
      <code>testEqualsMessageTemplates</code>
      <code>testGetStrict</code>
      <code>testLocaleDetectsNoEnglishLocaleOnOtherSetLocale</code>
      <code>testNonStringValidation</code>
      <code>testSetStrictThrowsInvalidArgumentException</code>
      <code>testSettingLocales</code>
      <code>testUsingApplicationLocale</code>
    </MissingReturnType>
  </file>
  <file src="test/Validator/PhoneNumberTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
    <MissingReturnType occurrences="9">
      <code>constructDataProvider</code>
      <code>numbersDataProvider</code>
      <code>testAllowPossibleSetterGetter</code>
      <code>testCanSpecifyCountryWithContext</code>
      <code>testConstruct</code>
      <code>testCountryIsCaseInsensitive</code>
      <code>testExampleNumbers</code>
      <code>testExampleNumbersAgainstPossible</code>
      <code>testInvalidTypes</code>
    </MissingReturnType>
  </file>
  <file src="test/Validator/PostCodeTest.php">
    <ArgumentTypeCoercion occurrences="4">
      <code>'Laminas\Validator\Exception\InvalidArgumentException'</code>
      <code>'Laminas\Validator\Exception\InvalidArgumentException'</code>
      <code>'Laminas\Validator\Exception\InvalidArgumentException'</code>
      <code>'Laminas\Validator\Exception\InvalidArgumentException'</code>
    </ArgumentTypeCoercion>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>new PostCodeValidator(['locale' =&gt; 'de_AT'])</code>
    </InvalidPropertyAssignmentValue>
    <MissingClosureParamType occurrences="2">
      <code>$value</code>
      <code>$value</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="2">
      <code>static function ($value) use ($params) {</code>
      <code>static function ($value) use ($params) {</code>
    </MissingClosureReturnType>
    <MissingParamType occurrences="4">
      <code>$expected</code>
      <code>$expected</code>
      <code>$postCode</code>
      <code>$postCode</code>
    </MissingParamType>
    <MissingReturnType occurrences="17">
      <code>UKPostCodesDataProvider</code>
      <code>liPostCode</code>
      <code>postCodesDataProvider</code>
      <code>testEqualsMessageTemplates</code>
      <code>testErrorMessageText</code>
      <code>testFrPostCodes</code>
      <code>testGettingLocale</code>
      <code>testLiPostCodes</code>
      <code>testLvPostCodes</code>
      <code>testNoPostCodes</code>
      <code>testServiceClass</code>
      <code>testSetGetFormat</code>
      <code>testSetGetFormatThrowsExceptionOnEmptyFormat</code>
      <code>testSetGetFormatThrowsExceptionOnNullFormat</code>
      <code>testSettingLocalesWithoutPostalCodes</code>
      <code>testSettingLocalesWithoutRegion</code>
      <code>testUKBasic</code>
    </MissingReturnType>
    <UndefinedDocblockClass occurrences="40">
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$this-&gt;validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>PostCode</code>
    </UndefinedDocblockClass>
  </file>
  <file src="test/View/Helper/CurrencyFormatTest.php">
    <MissingParamType occurrences="15">
      <code>$currencyCode</code>
      <code>$currencyCode</code>
      <code>$currencyPattern</code>
      <code>$currencyPattern</code>
      <code>$expected</code>
      <code>$expected</code>
      <code>$expected</code>
      <code>$locale</code>
      <code>$locale</code>
      <code>$message</code>
      <code>$number</code>
      <code>$number</code>
      <code>$showDecimals</code>
      <code>$showDecimals</code>
      <code>$test</code>
    </MissingParamType>
    <MissingReturnType occurrences="6">
      <code>assertMbStringEquals</code>
      <code>currencyProvider</code>
      <code>testBasic</code>
      <code>testDefaultLocale</code>
      <code>testSettersProvideDefaults</code>
      <code>testViewhelperExecutedSequentially</code>
    </MissingReturnType>
  </file>
  <file src="test/View/Helper/DateFormatTest.php">
    <MissingParamType occurrences="24">
      <code>$date</code>
      <code>$date</code>
      <code>$date</code>
      <code>$dateType</code>
      <code>$dateType</code>
      <code>$dateType</code>
      <code>$dateType</code>
      <code>$expected</code>
      <code>$locale</code>
      <code>$locale</code>
      <code>$locale</code>
      <code>$locale</code>
      <code>$message</code>
      <code>$pattern</code>
      <code>$pattern</code>
      <code>$test</code>
      <code>$timeType</code>
      <code>$timeType</code>
      <code>$timeType</code>
      <code>$timeType</code>
      <code>$timezone</code>
      <code>$timezone</code>
      <code>$timezone</code>
      <code>$timezone</code>
    </MissingParamType>
    <MissingReturnType occurrences="11">
      <code>assertMbStringEquals</code>
      <code>dateTestsDataProvider</code>
      <code>dateTestsDataProviderWithPattern</code>
      <code>getIntlDateFormatter</code>
      <code>testBasic</code>
      <code>testBugTwoPatternOnSameHelperInstance</code>
      <code>testDefaultLocale</code>
      <code>testDifferentTimezone</code>
      <code>testIntlCalendarIsHandledAsWell</code>
      <code>testSettersProvideDefaults</code>
      <code>testUseCustomPattern</code>
    </MissingReturnType>
    <TooManyArguments occurrences="1">
      <code>new IntlGregorianCalendar(2013, 6, 1)</code>
    </TooManyArguments>
  </file>
  <file src="test/View/Helper/NumberFormatTest.php">
    <MissingParamType occurrences="17">
      <code>$decimals</code>
      <code>$decimals</code>
      <code>$expected</code>
      <code>$expected</code>
      <code>$expected</code>
      <code>$formatStyle</code>
      <code>$formatStyle</code>
      <code>$formatType</code>
      <code>$formatType</code>
      <code>$locale</code>
      <code>$locale</code>
      <code>$message</code>
      <code>$number</code>
      <code>$number</code>
      <code>$test</code>
      <code>$textAttributes</code>
      <code>$textAttributes</code>
    </MissingParamType>
    <MissingReturnType occurrences="5">
      <code>assertMbStringEquals</code>
      <code>currencyTestsDataProvider</code>
      <code>testBasic</code>
      <code>testDefaultLocale</code>
      <code>testSettersProvideDefaults</code>
    </MissingReturnType>
  </file>
  <file src="test/View/Helper/PluralTest.php">
    <MissingParamType occurrences="4">
      <code>$expected</code>
      <code>$number</code>
      <code>$pluralRule</code>
      <code>$strings</code>
    </MissingParamType>
    <MissingReturnType occurrences="1">
      <code>testGetCorrectPlurals</code>
    </MissingReturnType>
  </file>
  <file src="test/View/Helper/TranslatePluralTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>'Laminas\I18n\Exception\RuntimeException'</code>
    </ArgumentTypeCoercion>
    <MissingReturnType occurrences="3">
      <code>testCustomInvokeArguments</code>
      <code>testDefaultInvokeArguments</code>
      <code>testInvokingWithoutTranslatorWillRaiseException</code>
    </MissingReturnType>
  </file>
  <file src="test/View/Helper/TranslateTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>'Laminas\I18n\Exception\RuntimeException'</code>
    </ArgumentTypeCoercion>
    <MissingReturnType occurrences="3">
      <code>testCustomInvokeArguments</code>
      <code>testDefaultInvokeArguments</code>
      <code>testInvokingWithoutTranslatorWillRaiseException</code>
    </MissingReturnType>
  </file>
</files>
